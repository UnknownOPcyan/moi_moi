// root/app/api/start-farming/route.ts
import { NextRequest, NextResponse } from 'next/server';
import { prisma } from '@/lib/prisma';

export async function POST(req: NextRequest) {
    try {
        const { telegramId } = await req.json();

        if (!telegramId) {
            return NextResponse.json({ error: 'Invalid telegramId' }, { status: 400 });
        }

        // Ensure the user exists before starting farming
        const user = await prisma.user.findUnique({
            where: { telegramId },
        });

        if (!user) {
            return NextResponse.json({ error: 'User not found' }, { status: 404 });
        }

        // Start farming logic
        const farmStartTime = new Date();

        await prisma.farmingPoint.create({
            data: {
                telegramId: user.telegramId,
                farmStartTime,
                farmAmount: 0,  // Initialize farmAmount with 0
            },
        });

        return NextResponse.json({ success: true, message: "Farming started!" });
    } catch (error) {
        console.error('Error starting farming:', error);
        return NextResponse.json({ error: 'Internal server error' }, { status: 500 });
    }
}